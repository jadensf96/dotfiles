# Learn how to configure Hyprland: https://wiki.hyprland.org/Configuring/

# Use defaults Omarchy defaults (but don't edit these directly!)
source = ~/.local/share/omarchy/default/hypr/autostart.conf
source = ~/.local/share/omarchy/default/hypr/bindings/media.conf
# source = ~/.local/share/omarchy/default/hypr/bindings/tiling.conf
source = ~/.local/share/omarchy/default/hypr/bindings/utilities.conf
# source = ~/.local/share/omarchy/default/hypr/envs.conf
# source = ~/.local/share/omarchy/default/hypr/looknfeel.conf
# source = ~/.local/share/omarchy/default/hypr/input.conf
source = ~/.local/share/omarchy/default/hypr/windows.conf
source = ~/.config/omarchy/current/theme/hyprland.conf

# Change your own setup in these files (and overwrite any settings from defaults!)
source = ~/.config/hypr/monitors.conf
source = ~/.config/hypr/input.conf
source = ~/.config/hypr/bindings.conf
source = ~/.config/hypr/envs.conf
source = ~/.config/hypr/looknfeel.conf
source = ~/.config/hypr/autostart.conf


plugin = /usr/lib/libhy3.so
exec-once = hyprpm reload -n
exec-once = /usr/bin/pypr
exec-once = /usr/bin/elephant
$pypr = uwsm-app -- /usr/bin/pypr-client
bind = $mod, backslash,exec,$pypr toggle wiki
bind = $mod, d, exec, walker
unbind = $mod, k

plugin:dynamic-cursors {


    # enables the plugin
    enabled = true

    # sets the cursor behaviour, supports these values:
    # tilt    - tilt the cursor based on x-velocity
    # rotate  - rotate the cursor based on movement direction
    # stretch - stretch the cursor shape based on direction and velocity
    # none    - do not change the cursors behaviour
    mode = tilt

    # minimum angle difference in degrees after which the shape is changed
    # smaller values are smoother, but more expensive for hw cursors
    threshold = 1
      # for mode = rotate
    rotate {

        # length in px of the simulated stick used to rotate the cursor
        # most realistic if this is your actual cursor size
        length = 30


        # clockwise offset applied to the angle in degrees
        # this will apply to ALL shapes
        offset = 0.0
    }
}

# windowrule = noinitialfocus,true , initialClass: org.qutebrowser.qutebrowser
windowrulev2 = workspace 2 ,silent, class:qutebrowser 
# windowrule = focusonactivate,off, initialClass: org.qutebrowser.qutebrowser


general {
    gaps_in = 3
    gaps_out = 5
    border_size = 1
    col.active_border = rgba(33ccffee)
    col.inactive_border = rgba(595959aa)

    resize_on_border = true
    layout = hy3
}

# gestures {
    workspace = 3, left, workspace, 1
# }


input {
    kb_layout = us
    sensitivity = 0
    follow_mouse = 1
    accel_profile = flat
    scroll_method=on_button_down
    scroll_button=273
}
# Switch to a submap called `resize`.
bind = $mod, r, submap, resize

# Start a submap called "resize".
submap = resize

# Set repeatable binds for resizing the active window.
binde = , l, resizeactive, 20 0
binde = , h, resizeactive, -20 0
binde = , k, resizeactive, 0 -20
binde = , j, resizeactive, 0 20

# Use `reset` to go back to the global submap
bind = , escape, submap, reset

# Reset the submap, which will return to the global submap
submap = reset

# Keybinds further down will be global again...

        
animations {
    enabled = yes
		# first_launch_animation = no

    bezier = windowIn, 0.06, 0.71, 0.25, 1
    bezier = windowResize, 0.04, 0.67, 0.38, 1
		bezier = workspacesMove, 0.1, 0.75, 0.15, 1

    animation = windowsIn, 1, 3, windowIn, slide #popin 20%
    animation = windowsOut, 1, 3, windowIn, slide #popin 70%
    animation = windowsMove, 1, 2.5, windowResize
    animation = fade, 1, 3, default
    animation = workspaces, 1, 4, workspacesMove, slide
		animation = layers, 1, 4, windowIn, slide
}


plugin {
    hy3 {
				tabs {
				  border_width = 1
					col.active = rgba(33ccff20)
					col.active.border = rgba(33ccffee)
					col.inactive = rgba(30303020)
					col.inactive.border = rgba(595959aa)
					col.urgent = rgba(ff223340)
					col.urgent.border = rgba(ff2233ee)
				}
        autotile {
            enable = false
            trigger_width = 800
            trigger_height = 500
        }
    }
}

render {
   direct_scanout = true
	 new_render_scheduling = true
}

# = Source for hyprviz
source = ./hyprviz.conf
