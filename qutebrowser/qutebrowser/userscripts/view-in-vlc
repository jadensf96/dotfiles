#!/bin/sh

# This script is called by qutebrowser's hint command.
# It receives a URL as its first argument.

url="$1"

# Ensure dmenu is found and DISPLAY is set
export PATH="/usr/local/bin:/usr/bin:/bin:$PATH"
export DISPLAY=:0

# Options for dmenu
options="Play with MPV\nPlay audio only\nDownload video"

# Debugging: Log the options string
echo "Options string: '$options'" >> /home/fish/qutebrowser_options_debug.log

# Show dmenu to the user
selected_action=$(printf "%s" "$options" | dmenu -p "Action for link:")


# Debugging: Log the selected action
echo "Selected action: $selected_action" >> /home/fish/qutebrowser_action_debug.log

# Act based on the user's choice
case "$selected_action" in
    "Play with MPV")
        # Pipe the video stream from yt-dlp to MPV.
        stream_url=$(yt-dlp -g "$url")
        echo "MPV Stream URL: $stream_url" >> /home/fish/qutebrowser_action_debug.log
        if [ -n "$stream_url" ]; then
            mpv "$stream_url" &
        else
            echo "message-error 'Could not get video stream for $url'" >> "$QUTE_FIFO"
        fi
        ;;
    "Play audio only")
        # Pipe the best audio-only stream from yt-dlp to MPV.
        stream_url=$(yt-dlp -g -f bestaudio "$url")
        echo "Audio Stream URL: $stream_url" >> /home/fish/qutebrowser_action_debug.log
        if [ -n "$stream_url" ]; then
            mpv --no-video "$stream_url" &
        else
            echo "message-error 'Could not get audio stream for $url'" >> "$QUTE_FIFO"
        fi
        ;;
    "Download video")
        # Download the video to the ~/Downloads directory.
        download_dir="$HOME/Downloads"
        # Create the directory if it doesn't exist.
        mkdir -p "$download_dir"
        # Start the download in the background.
        (cd "$download_dir" && yt-dlp "$url" &)
        # Notify the user in qutebrowser's status bar.
        echo "message-info 'Downloading video to $download_dir...'" >> "$QUTE_FIFO"
        ;;
esac